version: '2.4'

volumes:
  elastic-volume:

networks:
  elastic:
  db:

services:
  backend:
    build:
#      context: ./backend
      args:
        spring_profiles: prod
    container_name: rtr-backend
    restart: unless-stopped
    networks:
      - elastic
      - db
    ports:
      - "8080:8080"
      #- "${BACKEND_PORT}:8080"
    logging:
      driver: json-file
      options:
        max-size: 10 #'${COMPOSE_LOG_FILE_SIZE}'
        max-file: 10 #'${COMPOSE_LOG_FILE_COUNT}'
        compress: 'true'
    environment:
      DB_HOST: db
      DB_NAME: rmbt
      DB_PASSWORD: pass
      DB_PORT: 5432
      DB_URI: jdbc:postgresql://db:5432/rmbt
      DB_USER: sa
      SPRING_PROFILE: prod
      LOG_HOST: logstash
      LOG_PORT: 5000
      CONTROL_ALLOWED_ORIGIN: http://localhost:8080/RMBTControlServer/**
      CONTROL_SERVER_URL: http://localhost:8080/RMBTControlServer
      HOST_ID: server1

  ####### ELK
  kibana:
    image: library/kibana:7.17.24
    container_name: kibana
    restart: unless-stopped
    networks:
      - elastic
    ports:
      - "127.0.0.1:5601:5601"
    logging:
      driver: json-file
      options:
        max-size: 10 # '${COMPOSE_LOG_FILE_SIZE}'
        max-file: 10 # '${COMPOSE_LOG_FILE_COUNT}'
        compress: 'true'
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

  logstash:
    image: logstash:7.17.24
    container_name: logstash
    restart: unless-stopped
    ports:
      - "127.0.0.1:5000:5000"
    networks:
      - elastic
    volumes:
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    logging:
      driver: json-file
      options:
        max-size: 10 #'${COMPOSE_LOG_FILE_SIZE}'
        max-file: 10 # '${COMPOSE_LOG_FILE_COUNT}'
        compress: 'true'
    environment:
      LS_JAVA_OPTS: '-Xms128m -Xmx256m'
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200

  elasticsearch:
    image: elasticsearch:7.17.24
    container_name: elasticsearch
    restart: unless-stopped
    networks:
      - elastic
    ports:
      - "127.0.0.1:9200:9200"
    volumes:
      - elastic-volume:/usr/share/elasticsearch/data
    logging:
      driver: json-file
      options:
        max-size: 10
        max-file: 10
        compress: 'true'
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: '-Xms256m -Xmx512m'

  db:
    image: postgres
    networks:
      - db
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: rmbt
    volumes:
      - ./data:/var/lib/postgresql/data
