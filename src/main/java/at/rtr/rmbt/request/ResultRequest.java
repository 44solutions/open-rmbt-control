package at.rtr.rmbt.request;

import at.rtr.rmbt.enums.ClientStatus;
import at.rtr.rmbt.enums.QosStatus;
import at.rtr.rmbt.enums.ServerType;
import at.rtr.rmbt.enums.TestPlatform;
import at.rtr.rmbt.model.AndroidPermission;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Builder;
import lombok.EqualsAndHashCode;
import lombok.Getter;

import java.util.List;

@Api
@Builder
@Getter
@EqualsAndHashCode
@ApiModel(description = "Request to save test data")
public class ResultRequest {

    @ApiModelProperty(notes = "Platform of device", example = "Android")
    @JsonProperty(value = "plattform")
    private final TestPlatform platform;

    @ApiModelProperty(notes = "Client uuid")
    @JsonProperty(value = "client_uuid")
    private final String clientUUID;

    @ApiModelProperty(notes = "Client name", example = "RMBT")
    @JsonProperty(value = "client_name")
    private final ServerType clientName;

    @ApiModelProperty(notes = "Client version", example = "1.2.1")
    @JsonProperty(value = "client_version")
    private final String clientVersion;

    @ApiModelProperty(notes = "Language code of the current locale (ISO 639)")
    @JsonProperty(value = "client_language")
    private final String clientLanguage;

    @ApiModelProperty(notes = "Time of the test in millis")
    @JsonProperty(value = "time")
    private final Long time;

    @ApiModelProperty(notes = " Test token generated by control server", example = "8628925b-eda5-4500-9bbc-365f592470ce_1614328561_Dggllgjl/4zMNl97cNab2wgUb8k=")
    @JsonProperty(value = "test_token")
    private final String testToken;

    @ApiModelProperty(notes = "Port of the test server the test was performed on")
    @JsonProperty(value = "test_port_remote")
    private final Integer integer;

    @ApiModelProperty(notes = " Bytes downloaded during download phase")
    @JsonProperty(value = "test_bytes_download")
    private final Long testBytesDownload;

    @ApiModelProperty(notes = "Bytes uploaded during upload phase")
    @JsonProperty(value = "test_bytes_upload")
    private final Long testBytesUpload;

    @ApiModelProperty(notes = "Bytes uploaded during the whole test")
    @JsonProperty(value = "test_total_bytes_download")
    private final Long testTotalBytesDownload;

    @ApiModelProperty(notes = "Bytes downloaded during the whole test")
    @JsonProperty(value = "test_total_bytes_upload")
    private final Long testTotalBytesUpload;

    @ApiModelProperty(notes = "Test encryption type string", example = "TLSv1.2 (TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256)")
    @JsonProperty(value = "test_encryption")
    private final String testEncryption;

    @ApiModelProperty(notes = "Client public ip address, sent by control server", example = "192.168.1.100")
    @JsonProperty(value = "test_ip_local")
    private final String testIpLocal;

    @ApiModelProperty(notes = "Server public ip address", example = "81.16.157.221")
    @JsonProperty(value = "test_ip_server")
    private final String testIpServer;

    @ApiModelProperty(notes = "Duration of the download phase in nanoseconds")
    @JsonProperty(value = "test_nsec_download")
    private final Long downloadDurationNanos;

    @ApiModelProperty(notes = "Duration of the upload phase in nanoseconds")
    @JsonProperty(value = "test_nsec_upload")
    private final Long uploadDurationNanos;

    @ApiModelProperty(notes = "Number of threads used during the measurement")
    @JsonProperty(value = "test_num_threads")
    private final Integer testNumThreads;

    @ApiModelProperty(notes = "Number of threads used during the upload")
    @JsonProperty(value = "num_threads_ul")
    private final Integer numThreadsUl;

    @ApiModelProperty(notes = "Download speed in kbs", example = "7170")
    @JsonProperty(value = "test_speed_download")
    private final Integer downloadSpeed;

    @ApiModelProperty(notes = "Upload speed in kbs", example = "15061")
    @JsonProperty(value = "test_speed_upload")
    private final Integer uploadSpeed;

    @ApiModelProperty(notes = "Shortest ping in nanos", example = "29783021")
    @JsonProperty(value = "test_ping_shortest")
    private final Long pingShortest;

    @ApiModelProperty(notes = "Bytes downloaded on the interface during test")
    @JsonProperty(value = "test_if_bytes_download")
    private final Long testIfBytesDownload;

    @ApiModelProperty(notes = "Bytes uploaded on the interface during test")
    @JsonProperty(value = "test_if_bytes_upload")
    private final Long testIfBytesUpload;

    @ApiModelProperty(notes = "Bytes downloaded on the interface during download phase")
    @JsonProperty(value = "testdl_if_bytes_download")
    private final Long testdlIfBytesDownload;

    @ApiModelProperty(notes = "Bytes uploaded on the interface during download phase")
    @JsonProperty(value = "testdl_if_bytes_upload")
    private final Long testdlIfBytesUploaded;

    @ApiModelProperty(notes = "Bytes downloaded on the interface during download phase")
    @JsonProperty(value = "testul_if_bytes_download")
    private final Long testulIfBytesDownload;

    @ApiModelProperty(notes = "Bytes uploaded on the interface during download phase")
    @JsonProperty(value = "testul_if_bytes_upload")
    private final Long testulIfBytesUpload;

    @ApiModelProperty(notes = "Relative start time of download phase in nanos")
    @JsonProperty(value = "time_dl_ns")
    private final Long timeDownloadOffsetNanos;

    @ApiModelProperty(notes = "Relative start time of upload phase in nanos")
    @JsonProperty(value = "time_ul_ns")
    private final Long timeUploadOffsetNanos;

    @ApiModelProperty(notes = "Product")
    @JsonProperty(value = "product")
    private final String product;

    @ApiModelProperty(notes = "OS version")
    @JsonProperty(value = "os_version")
    private final String osVersion;

    @ApiModelProperty(notes = "Api level")
    @JsonProperty(value = "api_level")
    private final String apiLevel;

    @ApiModelProperty(notes = "Device")
    @JsonProperty(value = "device")
    private final String device;

    @ApiModelProperty(notes = "Model")
    @JsonProperty(value = "model")
    private final String model;

    @ApiModelProperty(notes = "Client software version")
    @JsonProperty(value = "client_software_version")
    private final String clientSoftwareVersion;

    @ApiModelProperty(notes = "Server id for the network")
    @JsonProperty(value = "network_type")
    private final Integer networkType;

    @ApiModelProperty(notes = "GeoLocation array")
    @JsonProperty(value = "geoLocations")
    private final List<GeoLocationRequest> geoLocations;

    @ApiModelProperty(notes = "Capabilities")
    @JsonProperty(value = "capabilities")
    private final CapabilitiesRequest capabilities;

    @ApiModelProperty(notes = "Pings array")
    @JsonProperty(value = "pings")
    private final List<PingRequest> pings;

    @ApiModelProperty(notes = "RadioInfo array")
    @JsonProperty(value = "radioInfo")
    private final RadioInfoRequest radioInfo;

    @ApiModelProperty(notes = "Speed details array")
    @JsonProperty(value = "speed_detail")
    private final List<SpeedDetailsRequest> speedDetails;

    @ApiModelProperty(notes = "CellLocation array")
    @JsonProperty(value = "cellLocations")
    private final List<CellLocationRequest> cellLocations;

    @ApiModelProperty(notes = "Signal array")
    @JsonProperty(value = "signals")
    private final List<SignalRequest> signals;

    @ApiModelProperty(notes = "Android permission array")
    @JsonProperty(value = "android_permission_status")
    private final List<AndroidPermission> androidPermissionStatuses;

    @ApiModelProperty(notes = "Developer mode")
    @JsonProperty(value = "developer_mode")
    private final Boolean developerMode;

    @ApiModelProperty(notes = "User server selection", example = "true")
    @JsonProperty(value = "user_server_selection")
    private final Boolean userServerSelection;

    @ApiModelProperty(notes = "User loop mode", example = "true")
    @JsonProperty(value = "user_loop_mode")
    private final boolean loopModeEnabled;

    @ApiModelProperty(notes = "mcc-mnc of the operator network, mobile networks only", example = "231-06")
    @JsonProperty(value = "telephony_network_operator")
    private final String telephonyNetworkOperator;

    @ApiModelProperty(notes = "True if the network is roaming, mobile networks only")
    @JsonProperty(value = "telephony_network_is_roaming")
    private final Boolean telephonyNetworkIsRoaming;

    @ApiModelProperty(notes = "Country code for network, mobile networks only")
    @JsonProperty(value = "telephony_network_country")
    private final String telephonyNetworkCountry;

    @ApiModelProperty(notes = "Name of the network operator, mobile networks only", example = "O2 - SK")
    @JsonProperty(value = "telephony_network_operator_name")
    private final String telephonyNetworkOperatorName;

    @ApiModelProperty(notes = "Name of the sim operator, mobile networks only", example = "O2 - SK")
    @JsonProperty(value = "telephony_network_sim_operator_name")
    private final String telephonyNetworkSimOperatorName;

    @ApiModelProperty(notes = "Name of the sim operator, mobile networks only", example = "O2 - SK")
    @JsonProperty(value = "telephony_network_sim_operator")
    private final String telephonyNetworkSimOperator;

    @ApiModelProperty(notes = "Phone type, mobile networks only", example = "1")
    @JsonProperty(value = "telephony_phone_type")
    private final Integer telephonyPhoneType;

    @ApiModelProperty(notes = "Data state, mobile networks", example = "2")
    @JsonProperty(value = "telephony_data_state")
    private final Integer telephonyDataState;

    @ApiModelProperty(notes = "Name of the access point, mobile networks only", example = "o2internet")
    @JsonProperty(value = "telephony_apn")
    private final String telephonyAPN;

    @ApiModelProperty(notes = "Country code of the sim card issuer, mobile networks only", example = "sk")
    @JsonProperty(value = "telephony_network_sim_country")
    private final String telephonyNetworkSimCountry;

    @ApiModelProperty(notes = "Telephony sim count")
    @JsonProperty(value = "telephony_sim_count")
    private final Integer telephonySimCount;

    @ApiModelProperty(notes = "Dual sim")
    @JsonProperty(value = "dual_sim")
    private final Boolean dualSim;

    @ApiModelProperty(notes = "Contains info about how data sim was selected and how cell info was chosen for mobile data connection")
    @JsonProperty(value = "dual_sim_detection_method")
    private final String dualSimDetectionMethod;

    @ApiModelProperty(notes = "Contains information about the way the 5G connection is handled")
    @JsonProperty(value = "telephony_nr_connection")
    private final String telephonyNrConnection;

    @ApiModelProperty(notes = "Wifi supplicant state", example = "COMPLETED")
    @JsonProperty(value = "wifi_supplicant_state")
    private final String wifiSupplicantState;

    @ApiModelProperty(notes = "Wifi supplicant state detail", example = "OBTAINING_IPADDR")
    @JsonProperty(value = "wifi_supplicant_state_detail")
    private final String wifiSupplicantStateDetail;

    @ApiModelProperty(notes = "SSID of the wifi network")
    @JsonProperty(value = "wifi_ssid")
    private final String wifiSSID;

    @ApiModelProperty(notes = "Id of the wifi network")
    @JsonProperty(value = "wifi_network_id")
    private final String wifiNetworkId;

    @ApiModelProperty(notes = "BSSID of the wifi network")
    @JsonProperty(value = "wifi_bssid")
    private final String wifiBSSID;

    @ApiModelProperty(notes = "Count of unsuccessful submissions")
    @JsonProperty(value = "test_submission_retry_count")
    private final Integer testSubmissionRetryCount;

    @ApiModelProperty(notes = "Reason of the test finishing, provided as int value", example = "0")
    @JsonProperty(value = "test_status")
    private final String testStatus;

    @ApiModelProperty(notes = "Phase was the last done by the client, provided like value from TestStatus except \"ERROR\" and \"ABORT\"")
    @JsonProperty(value = "last_client_status")
    private final ClientStatus lastClientStatus;

    @ApiModelProperty(notes = "Phase was the last done by the QoS test, provided like value from TestStatus except \"ERROR\" and \"ABORT\"")
    @JsonProperty(value = "last_qos_status")
    private final QosStatus lastQosStatus;


    @ApiModelProperty(notes = "Stacktrace of IllegalNetworkChangeException exception grabbed from RMBTClient which was happened during the test.\n" +
            "May be null if test was success or cancelled")
    @JsonProperty(value = "test_error_cause")
    private final String testErrorCause;

    @ApiModelProperty(notes = "Test tag added to each test, can be set in the developer mode settings")
    @JsonProperty(value = "tag")
    private final String tag;
}
